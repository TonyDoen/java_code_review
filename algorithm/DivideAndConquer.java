package com.zhd.algorithm;

public class DivideAndConquer
{
    
}

// 分治
// 分治算法思想：将一个规模为N的问题分解为K个规模较小的子问题，子问题相互独立且与原问题性质相同，求出子问题可得到原问题

// 1.分解，将要解决的问题划分成若干规模较小的同类问题
// 2.求解，当子问题划分足够小时，用简单的方法解决
// 3.合并，按原问题的要求，将子问题的解逐层合并构成原问题

// 难点：对分治的理解，结果的调整和对结果的合并

// 分治法能解决的问题
// 1.问题规模缩小就容易解决。次特征大多问题都满足
// 2.问题可以分解为若干规模较小的相同问题，即问题具有最优子结构性质
// 3.利用问题分解出的子问题可以合并为该问题的解，此特征最为关键。若，具备第一，第二特征，不具备第三特征，则考虑贪婪（贪心算法），动态迭代法
// 4.该问题分解的子问题应该相互独立，子问题之间不包含公共子问题。此特征涉及分治法的效率，若，子问题不独立，则分治法要重复解公共子问题，此时，一般使用动态迭代法更好。