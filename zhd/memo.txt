六大原则
开闭原则（Open Close Principle）：对扩展开放，对修改关闭
里氏代换原则（Liskov Substitution Principle）:子类可以替换掉父类
依赖倒转（Dependence Inversion Principle）：针对接口编程，依赖于抽象不依赖于具体
接口隔离原则（Interface Segregation Principle）：使用多个隔离的接口，比使用单个接口要好
迪米特法则（Demeter Principle）：最少知道，一个实体尽量少与其他实体发生关系
合成复用原则（Composite Reuse Principle）：尽量使用合成，聚合的方式，不使用继承

GoF
创建型5种
工厂方法模式，抽象工厂模式，单例模式，建造者模式，原型模式
<factoryMethod>,<abstractFactory>,<singleton>,<builder>,<prototype>

结构型7种
适配器模式，装饰器模式，代理模式，外观模式，桥接模式，组合模式，享元模式
<adapter>,<decorator>,<proxy>,<facade>,<bridge>,<composite>,<flyweight>

行为型11种
策略模式，模板方法模式，观察者模式，迭代器模式，责任链模式，命令模式，备忘录模式，状态模式，访问者模式，中介者模式，解释器模式
<strategy>,<template>,<observer>,<iterator>,<chain>,<command>,<memento>,<state>,<visitor>,<mediator>,<interpreter>

并发型模式
线程池模式

